version: '3.9'

services:
  postgres:
    image: postgres:15-alpine
    container_name: pg-kong
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./pg-data:/var/lib/postgresql/data
      - ./pg-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - kong-net

  kong-migrations:
    image: kong:3.3
    container_name: kong-migrations
    depends_on:
      postgres:
        condition: service_healthy
    restart: "no"
    env_file:
      - .env
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: postgres
      KONG_PG_PORT: 5432
      KONG_PG_USER: ${KONG_DB_USER}
      KONG_PG_PASSWORD: ${KONG_DB_PASSWORD}
      KONG_PG_DATABASE: ${KONG_DB_NAME}
    command: sh -c "kong migrations bootstrap"
    networks:
      - kong-net

  kong:
    image: kong:3.3
    container_name: kong
    depends_on:
      - kong-migrations
    restart: unless-stopped
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: postgres
      KONG_PG_PORT: 5432
      KONG_PG_USER: ${KONG_DB_USER}
      KONG_PG_PASSWORD: ${KONG_DB_PASSWORD}
      KONG_PG_DATABASE: ${KONG_DB_NAME}
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
    networks:
      - kong-net

  # konga for gui management (optional)
  # konga:
  #   image: pantsel/konga:latest
  #   container_name: konga
  #   restart: unless-stopped
  #   environment:
  #     - NODE_ENV=production
  #   ports:
  #     - "1337:1337"
  #   networks:
  #     - kong-net

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: argo-tunnel
    restart: no
    command: tunnel --config /etc/cloudflared/config.yml run
    env_file:
      - .env
    volumes:
      - ./cloudflared/config.yml:/etc/cloudflared/config.yml:ro
      - ${CF_TUNNEL_CREDENTIAL_FILE}:/etc/cloudflared/tunnel.json:ro
    network_mode: host

networks:
  kong-net:
    driver: bridge
